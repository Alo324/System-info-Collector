import socket
import requests
import uuid
import subprocess
import re

class SystemInfo:
    def get_local_ip(self):
        """Return local IP address"""
        hostname = socket.gethostname()
        local_ip = socket.gethostbyname(hostname)
        return local_ip

    def get_public_ip(self):
        """Return public IP address"""
        try:
            public_ip = requests.get("https://api.ipify.org").text
            return public_ip
        except:
            return "Unable to fetch public IP"

    def get_mac_address(self):
        """Return MAC address"""
        mac_num = hex(uuid.getnode()).replace('0x', '').upper()
        mac_address = ':'.join(mac_num[i:i+2] for i in range(0, len(mac_num), 2))
        return mac_address

    def get_wifi_password(self):
        """Return current Wi-Fi password (Windows only)"""
        try:
            output = subprocess.check_output("netsh wlan show profiles", shell=True).decode()
            profiles = re.findall("All User Profile\s*:\s*(.*)", output)
            wifi_info = {}
            for profile in profiles:
                profile = profile.strip()
                try:
                    password_output = subprocess.check_output(
                        f'netsh wlan show profile "{profile}" key=clear', shell=True
                    ).decode()
                    password = re.search("Key Content\s*:\s*(.*)", password_output)
                    wifi_info[profile] = password.group(1) if password else "No password"
                except:
                    wifi_info[profile] = "Error reading"
            return wifi_info
        except:
            return "Unable to fetch Wi-Fi info"


# ====== Example Usage ======
if __name__ == "__main__":
    info = SystemInfo()
    print("Local IP:", info.get_local_ip())
    print("Public IP:", info.get_public_ip())
    print("MAC Address:", info.get_mac_address())
    print("Wi-Fi Passwords:")
    for name, pwd in info.get_wifi_password().items():
        print(f"  {name}: {pwd}")
